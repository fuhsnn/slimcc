name: ci

on: [push, pull_request, workflow_dispatch]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { vm: main, file: debian_asan }
          - { vm: interop, file: debian_asan_interop }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: scripts/${{ matrix.file }}.Dockerfile
          tags: ${{ matrix.vm }}
          outputs: type=docker,dest=/tmp/${{ matrix.vm }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.vm }}
          path: /tmp/${{ matrix.vm }}.tar

  run:
    runs-on: ubuntu-latest
    needs: build-docker
    strategy:
      fail-fast: false
      matrix:
        include:
          - { vm: interop, proj: test_bfs }
          - { vm: interop, proj: test_c23doku }
          - { vm: interop, proj: test_c3 }
          - { vm: interop, proj: test_flex }
          - { vm: interop, proj: test_imagemagick }
          - { vm: interop, proj: test_liballegro5 }
          - { vm: interop, proj: test_libexpat }
          - { vm: interop, proj: test_msgpack }
          - { vm: interop, proj: test_muon }
          - { vm: interop, proj: test_quickjs }
          - { vm: interop, proj: test_redis }
          - { vm: interop, proj: test_sokol }
          - { vm: interop, proj: test_valkey }
          - { vm: interop, proj: test_wasm3 }
          - { vm: interop, proj: test_wuffs }
          - { vm: interop, proj: build_glfw }
          - { vm: interop, proj: build_luajit }
          - { vm: interop, proj: build_ncurses }
          - { vm: interop, proj: build_nuklear }
          - { vm: interop, proj: build_q2rtx }
          - { vm: interop, proj: build_quake3e }
          - { vm: interop, proj: build_raylib_raygui }
          - { vm: interop, proj: build_sdl3 }
          - { vm: interop, proj: build_yquake2 }
          - { vm: main, proj: test_bash }
          - { vm: main, proj: test_bearssl }
          - { vm: main, proj: test_bison }
          - { vm: main, proj: test_blake2 }
          - { vm: main, proj: test_busybox }
          - { vm: main, proj: test_bzip2 }
          - { vm: main, proj: test_calc }
          - { vm: main, proj: test_cello }
          - { vm: main, proj: test_cjson }
          - { vm: main, proj: test_coreutils }
          - { vm: main, proj: test_cpio }
          - { vm: main, proj: test_cproc }
          - { vm: main, proj: test_curl }
          - { vm: main, proj: test_doom }
          - { vm: main, proj: test_elk }
          - { vm: main, proj: test_file }
          - { vm: main, proj: test_gawk }
          - { vm: main, proj: test_git }
          - { vm: main, proj: test_glib }
          - { vm: main, proj: test_gmake }
          - { vm: main, proj: test_go }
          - { vm: main, proj: test_gsed }
          - { vm: main, proj: test_gtar }
          - { vm: main, proj: test_gzip }
          - { vm: main, proj: test_janet }
          - { vm: main, proj: test_jemalloc }
          - { vm: main, proj: test_jq }
          - { vm: main, proj: test_lame }
          - { vm: main, proj: test_libarchive }
          - { vm: main, proj: test_libevent }
          - { vm: main, proj: test_libgmp }
          - { vm: main, proj: test_libjpeg }
          - { vm: main, proj: test_libjsonc }
          - { vm: main, proj: test_liblz4 }
          - { vm: main, proj: test_libmpc }
          - { vm: main, proj: test_libmpfr }
          - { vm: main, proj: test_libpcre2 }
          - { vm: main, proj: test_libpng }
          - { vm: main, proj: test_libpsl }
          - { vm: main, proj: test_libressl }
          - { vm: main, proj: test_libsamplerate }
          - { vm: main, proj: test_libsodium }
          - { vm: main, proj: test_libuev }
          - { vm: main, proj: test_libuv }
          - { vm: main, proj: test_libxml }
          - { vm: main, proj: test_libyaml }
          - { vm: main, proj: test_lua }
          - { vm: main, proj: test_mawk }
          - { vm: main, proj: test_memcached }
          - { vm: main, proj: test_metalang99 }
          - { vm: main, proj: test_mimalloc }
          - { vm: main, proj: test_mruby }
          - { vm: main, proj: test_nginx }
          - { vm: main, proj: test_noplate }
          - { vm: main, proj: test_ocaml }
          - { vm: main, proj: test_oniguruma }
          - { vm: main, proj: test_openssh }
          - { vm: main, proj: test_openssl }
          - { vm: main, proj: test_pacman }
          - { vm: main, proj: test_pdpmake }
          - { vm: main, proj: test_perl }
          - { vm: main, proj: test_pixman }
          - { vm: main, proj: test_php }
          - { vm: main, proj: test_postgres }
          - { vm: main, proj: test_python }
          - { vm: main, proj: test_qbe_hare }
          - { vm: main, proj: test_ruby }
          - { vm: main, proj: test_scrapscript }
          - { vm: main, proj: test_sqlite }
          - { vm: main, proj: test_tcl }
          - { vm: main, proj: test_tinycc }
          - { vm: main, proj: test_toxcore }
          - { vm: main, proj: test_toybox }
          - { vm: main, proj: test_vim }
          - { vm: main, proj: test_wget }
          - { vm: main, proj: test_xxhash }
          - { vm: main, proj: test_xz }
          - { vm: main, proj: test_yash }
          - { vm: main, proj: test_zlib }
          - { vm: main, proj: test_zsh }
          - { vm: main, proj: test_zstd }
          - { vm: main, proj: build_dash }
          - { vm: main, proj: build_erlang }
          - { vm: main, proj: build_freetype }
          - { vm: main, proj: build_gcc }
          - { vm: main, proj: build_libev }
          - { vm: main, proj: build_lynx }
          - { vm: main, proj: build_nano }
          - { vm: main, proj: build_stb }
          - { vm: main, proj: build_zig }
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.vm }}
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/${{ matrix.vm }}.tar

      - name: Run test
        run: >
          sudo docker run ${{ matrix.vm }}
          su non-root -c
          'bash "$0" "$1"' linux_thirdparty.bash ${{ matrix.proj }}

  musl-bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: scripts/debian_asan_musl_bootstrap.Dockerfile
