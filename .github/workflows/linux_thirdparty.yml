name: build-test-thirdparty

on: [push, pull_request]

jobs:
  host-x86-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install prerequisite
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: file build-essential clang
          version: 1.0
      - name: Build stage 1 artifact
        env:
          CC: ${{ matrix.compiler }}
        run: |
          make clean
          make slimcc
        shell: bash
      - name: Test stage 1
        run: |
          make test || exit 1
        shell: bash
      - name: Build stage 2 artifact
        run: |
          make stage2/slimcc
        shell: bash
      - name: Test stage 2
        run: |
          make test-stage2 || exit 1
        shell: bash

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: scripts/debian_asan.Dockerfile
          tags: debian_asan
          outputs: type=docker,dest=/tmp/debian_asan.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian_asan
          path: /tmp/debian_asan.tar

  thirdparty-tests:
    runs-on: ubuntu-latest
    needs: [docker, host-x86-build]
    strategy:
      matrix:
        thirdparty:
          - test_cello
          - test_curl
          - test_doom
          - test_git
          - test_libpng
          - test_libuev
          - test_lua
          - test_metalang99
          - test_oniguruma_jq
          - test_openssh
          - test_openssl
          - test_perl
          - test_php
          - test_postgres
          - test_python
          - test_qbe_hare
          - test_sqlite
          - test_tinycc
          - test_toxcore
          - test_toybox
          - test_vim
          - test_zlib
          - test_zstd
          - build_gcc
          - build_musl
          - build_nano
          - build_sdl
    steps:
      - name: Download debian asan artifact
        uses: actions/download-artifact@v4
        with:
          name: debian_asan
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/debian_asan.tar

      - name: Run test
        run: >
          sudo docker run debian_asan
          su non-root -c
          'bash "$0" "$1"' linux_thirdparty.bash ${{ matrix.thirdparty }}
